
name: Delete Workflows

on:
  workflow_dispatch:
  #schedule:
    # 每天凌晨执行一次
    #- cron: '0 0 * * *'

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Cleanup workflows
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            # 获取当前仓库的所有工作流运行
            runs=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs?per_page=100" | jq -r '.workflow_runs[]')
        
            # 定义一个函数来比较 ID
            compare_ids() {
              if [[ "$1" -gt "$2" ]]; then
                return 1
              elif [[ "$1" -lt "$2" ]]; then
                return 2
              else
                return 0
              fi
            }
        
            # 使用数组和排序保留最近的两个已完成和未完成的工作流
            completed_runs=($(echo "$runs" | jq -r 'select(.conclusion == "success" or .conclusion == "failure") | .id'))
            sorted_completed_runs=($(printf "%s\n" "${completed_runs[@]}" | sort -n))
            retained_completed_runs=("${sorted_completed_runs[@]: -2}")
        
            pending_runs=($(echo "$runs" | jq -r 'select(.conclusion == "neutral" or .conclusion == "cancelled" or .conclusion == "timed_out" or .conclusion == "action_required") | .id'))
            sorted_pending_runs=($(printf "%s\n" "${pending_runs[@]}" | sort -n))
            retained_pending_runs=("${sorted_pending_runs[@]: -2}")
        
            # 删除其他所有工作流
            for run in $(echo "$runs" | jq -r '.[] | @base64'); do
              _jq() {
                echo ${run} | base64 --decode | jq -r ${1}
              }
        
              run_id=$(_jq '.id')
              conclusion=$(_jq '.conclusion')
        
              compare_ids "$run_id" "${retained_completed_runs[0]}"
              comp1=$?
              compare_ids "$run_id" "${retained_completed_runs[1]}"
              comp2=$?
              compare_ids "$run_id" "${retained_pending_runs[0]}"
              comp3=$?
              compare_ids "$run_id" "${retained_pending_runs[1]}"
              comp4=$?
        
              if [[ $comp1 -ne 0 && $comp2 -ne 0 && $comp3 -ne 0 && $comp4 -ne 0 ]]; then
                echo "删除工作流: $run_id"
                curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/$run_id"
              fi
            done
        

name: OpenWrt x Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH .
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Cache repository information
      id: cache_repo_info
      uses: actions/cache@v4
      with:
        path: openwrt
        key: ${{ runner.os }}-openwrt-repo-${{ hashFiles('**/.git') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-repo-

    - name: Load custom feeds
      if: steps.cache_repo_info.outputs.cache-hit != 'true'
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      if: steps.cache_repo_info.outputs.cache-hit != 'true'
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      if: steps.cache_repo_info.outputs.cache-hit != 'true'
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      if: steps.cache_repo_info.outputs.cache-hit != 'true'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Check repository status
      id: repo_status
      run: |
        cd openwrt
        git fetch
        LOCAL=$(git rev-parse @)
        REMOTE=$(git rev-parse @{u})
        if [ $LOCAL != $REMOTE ]; then
          echo "::set-output name=updated::true"
        else
          echo "::set-output name=updated::false"
        fi

    - name: Restore cache
      id: cache
      if: steps.repo_status.outputs.updated != 'true'
      uses: actions/cache@v4
      with:
        path: openwrt/build_dir
        key: ${{ runner.os }}-openwrt-${{ hashFiles('**/Makefile') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-

    - name: Compile the firmware
      id: compile
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Save built packages to cache
      if: steps.compile.outcome == 'success'
      uses: actions/cache@v4
      with:
        path: |
          openwrt/build_dir
          openwrt/bin
        key: ${{ runner.os }}-openwrt-${{ hashFiles('**/Makefile') }}-${{ env.FILE_DATE }}
        restore-keys: |
          ${{ runner.os }}-openwrt-
    
    - name: Check space usage
      if: (!cancelled())
      run: df -hT
      
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_immortal_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

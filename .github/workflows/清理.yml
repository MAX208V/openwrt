name: Delete Workflow
on:
  schedule:
    - cron: '0 0 * * *'  # 每天运行一次
  workflow_dispatch:      # 手动触发

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Cleanup workflow runs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          import os
          import requests
          from datetime import datetime, timezone

          # 获取 GitHub Token 和仓库信息
          GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
          REPO = os.getenv('GITHUB_REPOSITORY')

          # 设置 API 请求头
          headers = {
              'Authorization': f'token {GITHUB_TOKEN}',
              'Accept': 'application/vnd.github.v3+json'
          }

          # 获取工作流运行列表
          def get_workflow_runs():
              url = f'https://api.github.com/repos/{REPO}/actions/runs'
              response = requests.get(url, headers=headers)
              response.raise_for_status()
              return response.json()['workflow_runs']

          # 删除工作流运行
          def delete_workflow_run(run_id):
              url = f'https://api.github.com/repos/{REPO}/actions/runs/{run_id}'
              response = requests.delete(url, headers=headers)
              response.raise_for_status()
              print(f'Deleted workflow run {run_id}')

          # 主函数
          def main():
              # 获取所有工作流运行
              runs = get_workflow_runs()

              # 过滤出运行时间小于5分钟的工作流
              short_runs = [run for run in runs if (datetime.fromisoformat(run['updated_at'].replace('Z', '+00:00')) - datetime.fromisoformat(run['created_at'].replace('Z', '+00:00'))).total_seconds() < 300]

              # 按时间排序（最新的在前）
              short_runs.sort(key=lambda run: run['created_at'], reverse=True)

              # 保留最近两条工作流，删除其余的
              for run in short_runs[2:]:
                  delete_workflow_run(run['id'])

          if __name__ == '__main__':
              main()
